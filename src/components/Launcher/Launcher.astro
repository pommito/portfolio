---
import { getLangFromUrl, getRouteFromUrl, stringifyTranslations, useTranslatedPath, useTranslations } from "@/i18n/utils";

import Shortcut from "../ui/Shortcut.astro";
import LauncherOverlay from "./LauncherOverlay.astro";
import LauncherListCategory from "./LauncherListCategory.astro";
import LauncherListItem from "./LauncherListItem.astro";

const lang = getLangFromUrl(Astro.url);
const route = getRouteFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);


---

<LauncherOverlay>
  <div
    role="dialog"
    aria-hidden="true"
    tabindex="-1"
    class="relative mx-auto w-full top-20 z-999 max-w-xl text-neutral-500 dark:text-neutral-400 bg-neutral-100 dark:bg-neutral-800 inset-ring inset-ring-neutral-950/8 dark:inset-ring-white/2 rounded-lg"
  >
    <header class="flex items-center justify-between gap-2 text-neutral-800 dark:text-neutral-100 border-b border-neutral-900/5 dark:border-white/5 px-4 py-3">
      <div class="flex items-center gap-2">
        <div class="size-2 bg-neutral-800 dark:bg-neutral-100 rounded-full"/>
        Launcher
      </div>
      <button id="close-launcher-button" class="cursor-pointer">
        <Shortcut>esc</Shortcut>
      </button>
    </header>
    <div class="py-2">
      <ul class="px-2">
        <LauncherListCategory label={stringifyTranslations(t("common.launcher.sectionsLabel.pages"))}>
          <LauncherListItem id="LinkToHome" title={stringifyTranslations(t("common.nav.home"))} href={translatePath('/', lang)}>
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="size-4"><path d="M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8"/><path d="M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/></svg>
          </LauncherListItem>
          <LauncherListItem id="LinkTo" title={stringifyTranslations(t("common.nav.about"))} href={translatePath('/a-propos/', lang)}>
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="size-4"><circle cx="12" cy="8" r="5"/><path d="M20 21a8 8 0 0 0-16 0"/></svg>
          </LauncherListItem>
          <LauncherListItem id="LinkTo" title={stringifyTranslations(t("common.nav.blog"))} href={translatePath('/blog/', lang)}>
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="size-4"><rect width="8" height="18" x="3" y="3" rx="1"/><path d="M7 3v18"/><path d="M20.4 18.9c.2.5-.1 1.1-.6 1.3l-1.9.7c-.5.2-1.1-.1-1.3-.6L11.1 5.1c-.2-.5.1-1.1.6-1.3l1.9-.7c.5-.2 1.1.1 1.3.6Z"/></svg>
          </LauncherListItem>
        </LauncherListCategory>
        <LauncherListCategory label={stringifyTranslations(t("common.launcher.sectionsLabel.contact"))}>
          <LauncherListItem id="SendEmail" title={stringifyTranslations(t("common.launcher.actionsLabel.email"))} href="mailto:victor.lebecq.pro@gmail.com">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="size-4"><path d="M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z"/><path d="m21.854 2.147-10.94 10.939"/></svg>
          </LauncherListItem>
          <LauncherListItem id="LinkToGithub" title={stringifyTranslations(t("common.launcher.actionsLabel.github"))} href="https://github.com/pommito">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="size-4"><path d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"/><path d="M9 18c-4.51 2-5-2-7-2"/></svg>
          </LauncherListItem>
        </LauncherListCategory>
        <LauncherListCategory label={stringifyTranslations(t("common.launcher.sectionsLabel.settings"))}>
          <LauncherListItem id="ThemeSwitcher" title={stringifyTranslations(t("common.launcher.actionsLabel.theme"))}>
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="size-4"><circle cx="13.5" cy="6.5" r=".5" fill="currentColor"/><circle cx="17.5" cy="10.5" r=".5" fill="currentColor"/><circle cx="8.5" cy="7.5" r=".5" fill="currentColor"/><circle cx="6.5" cy="12.5" r=".5" fill="currentColor"/><path d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10c.926 0 1.648-.746 1.648-1.688 0-.437-.18-.835-.437-1.125-.29-.289-.438-.652-.438-1.125a1.64 1.64 0 0 1 1.668-1.668h1.996c3.051 0 5.555-2.503 5.555-5.554C21.965 6.012 17.461 2 12 2z"/></svg>
          </LauncherListItem>
          <LauncherListItem id="LanguageSwitcher" title={stringifyTranslations(t("common.launcher.actionsLabel.language"))} href={translatePath(`/${route ? route : ''}`, lang === 'fr' ? 'en' : 'fr')}>
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="size-4"><path d="m5 8 6 6"/><path d="m4 14 6-6 2-3"/><path d="M2 5h12"/><path d="M7 2h1"/><path d="m22 22-5-10-5 10"/><path d="M14 18h6"/></svg>
          </LauncherListItem>
        </LauncherListCategory>
      </ul>
    </div>
    <div class="pointer-coarse:hidden flex items-center gap-1 text-xs mx-auto w-fit pb-4">
      {stringifyTranslations(t("common.launcher.arrowShortcut"))} <Shortcut>↓</Shortcut><Shortcut>↑</Shortcut>
    </div>
  </div>
</LauncherOverlay>


<script>
  // TODO : Refactor this

  import { toggleModal, replicateClick } from '@/utils/launcher';

  let handleKeyDown : (e : KeyboardEvent) => void;
  let handleClickOutside : (e : MouseEvent) => void;

  document.addEventListener('astro:page-load', () => {
      const LauncherElem = document.getElementById('search-menu');
      const closeSearchButtonElem = document.getElementById('close-launcher-button');
      let menuItems = document.querySelectorAll('[role="menuitem"]');

      let currentIndex = -1;

      if (!LauncherElem || !closeSearchButtonElem) return;

      handleKeyDown = (e : KeyboardEvent) => {
          if (e.key === 'k' && (e.metaKey || e.ctrlKey)) {
              toggleModal();
              currentIndex = -1;
          } else if (e.key === 'Escape') {
              if (LauncherElem.getAttribute('data-state') !== 'open') return;
              toggleModal();
              currentIndex = -1;
          } else if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {
              if (e.key === 'ArrowDown') {
                  currentIndex = (currentIndex < menuItems.length - 1) ? currentIndex + 1 : currentIndex;
              } else if (e.key === 'ArrowUp') {
                  currentIndex = (currentIndex > 0) ? currentIndex - 1 : 0;
              }
              (menuItems[currentIndex] as HTMLElement).focus();
          } else if (e.key === 'Enter') {
              if (LauncherElem.getAttribute('data-state') !== 'open') return;
              replicateClick(e);
          }
      };

      handleClickOutside = (event: MouseEvent) => {
        const LauncherModalElem = LauncherElem.querySelector('[role="dialog"]');
        if (!LauncherModalElem) return;

        if (LauncherElem.contains(event.target as Node) && !LauncherModalElem.contains(event.target as Node)) {
          toggleModal();
          currentIndex = -1;
        };
      };

      window.addEventListener('keydown', handleKeyDown);
      window.addEventListener('click', handleClickOutside);
      closeSearchButtonElem.addEventListener('click', toggleModal);
  });

  // Make sur that eventlistsener is removed before the view transition swap
  document.addEventListener('astro:before-swap', () => {
      if (handleKeyDown) {
          window.removeEventListener('keydown', handleKeyDown);
          window.removeEventListener('click', handleClickOutside);
      }
      const closeSearchButtonElem = document.getElementById('close-launcher-button');
      if (closeSearchButtonElem) {
          closeSearchButtonElem.removeEventListener('click', toggleModal);
      }
  });
</script>
