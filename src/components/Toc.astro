---
import type { MarkdownHeading } from 'astro';
import { getLangFromUrl, useTranslations } from '@/i18n/utils';

type Props = {
  headings: MarkdownHeading[]
}

const { headings } = Astro.props as Props;

const filteredHeadings = headings.filter((heading) => heading.depth <= 3);

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

function getConditionalLineClass(depth: number) {
  return `${depth === 2 ? 'w-6' : 'w-4'} `;
}

function getConditionalListItemClass(depth: number) {
  return `${depth === 3 ? 'ml-4 text-xs' : 'text-sm'}`;
}

---

<nav aria-label={t('blog.article.tocAriaLabel').toString()} class="hidden md:block fixed top-56 left-4 w-80 z-999 pointer-coarse:hidden">
  <div class="peer space-y-2 w-8">
    {filteredHeadings.map((heading) => (
      <div class={` h-0.5 relative  rounded-lg transition-all duration-300 ease-in-out bg-neutral-400 dark:bg-neutral-700 hover:bg-neutral-800 dark:hover:bg-neutral-100 hover:scale-120 ${getConditionalLineClass(heading.depth)}`}>
        <a href={`#${heading.slug}`} tabindex="0" aria-label={`${t('blog.article.tocLinksAriaLabel')} ${heading.text}`}>
          <span class="absolute inset-0"></span>
        </a>
      </div>
    ))}
  </div>
  <ul class="group absolute top-0 left-8 w-full scale-0 opacity-0 overflow-hidden space-y-2 rounded-lg pl-3  text-neutral-800 dark:text-neutral-100 bg-neutral-100 dark:bg-neutral-900  transition-all ease-in-out duration-500 origin-top-left peer-hover:scale-100 hover:scale-100 peer-hover:opacity-100 hover:opacity-100">
    {filteredHeadings.map((heading) => (
      <li class={`transition-all duration-300 ease-in-out hover:underline group-hover:not-hover:opacity-40 cursor-pointer ${getConditionalListItemClass(heading.depth)}`}>
        <a href={`#${heading.slug}`} tabindex="0" aria-label={`${t('blog.article.tocLinksAriaLabel')} ${heading.text}`}>{heading.text}</a>
      </li>
    ))}
  </ul>
</nav>