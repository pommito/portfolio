---
import type { CollectionEntry } from "astro:content";
import { render } from "astro:content";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import { getBlogCollection } from "@/utils/collections";

import Layout from "@/layouts/Layout.astro";
import Tag from "@/components/ui/Tag.astro";
import Toc from "@/components/Toc.astro";

type Props = {
  article: CollectionEntry<"blog">;
};

export async function getStaticPaths({ lang = "fr" }: { lang?: "fr" | "en" }) {
  const articles = await getBlogCollection(lang);

  return articles.map((article) => ({
    params: { id: article.data.href },
    props: { article },
  }));
}


const { article } = Astro.props;
const { Content, headings } = await render(article);

const { title, description, publishingDate, tags } = article.data;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const formatedDate = new Date(publishingDate).toLocaleDateString(`${lang}-${lang.toUpperCase()}`, { year: 'numeric', month: 'long', day: 'numeric' });

---

<Layout
  title={`${title}ãƒ»Victor Lebecq`}
  metaTitle={`${title} - Victor Lebecq`}
  metaDescription={description}
  pageType="article"
>
    <h1 class="text-2xl">{title}</h1>
    <h4 class="text-neutral-500">{t("blog.article.dateText")} {formatedDate}</h4>
    {tags && (
    <div class="space-x-1">
        {tags.map((tag) => (
        <Tag label={tag} />
        ))}
    </div>
    )}

    <Toc headings={headings} />

    <div id="article-content" class="group mt-12 sm:mt-16">
        <Content  />
	  </div>
</Layout>
